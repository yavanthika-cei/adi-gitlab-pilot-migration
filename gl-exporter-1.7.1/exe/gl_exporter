#!/usr/bin/env ruby

require "gl_exporter"
require "gl_exporter/version"

require "dotenv"
require "optparse"

options = {
  models:     GlExporter::OPTIONAL_MODELS,
  ssl_verify: true
}
optparse = OptionParser.new do |opts|
  opts.banner = <<USAGE
Usage: gl_exporter --out-file FILE.tar.gz --namespace NAMESPACE --project PROJECT
Usage: gl_exporter --out-file FILE.tar.gz --manifest MANIFEST.csv
USAGE

  opts.on "-o FILE", "--out-file FILE", "write the archive to FILE" do |v|
    options[:output_path] = v
  end

  opts.on "--namespace NAMESPACE", "when given with --project, export from NAMESPACE/PROJECT" do |v|
    options[:namespace] = v
  end

  opts.on "--project PROJECT" do |v|
    options[:project] = v
  end

  opts.on "--only MODELS", "export only the provided models from the list: #{GlExporter::OPTIONAL_MODELS.join(", ")}" do |v|
    if (invalid = v.split(",") - GlExporter::OPTIONAL_MODELS).any?
      puts "Invalid model(s) provided to --only: #{invalid.join(",")}\nValid options are: #{GlExporter::OPTIONAL_MODELS.join(", ")}"
      exit 1
    end
    options[:models] = GlExporter::OPTIONAL_MODELS & v.split(",")
  end

  opts.on "--except MODELS", "don't export the provided models from the list: #{GlExporter::OPTIONAL_MODELS.join(", ")}" do |v|
    if (invalid = v.split(",") - GlExporter::OPTIONAL_MODELS).any?
      puts "Invalid model(s) provided to --except: #{invalid.join(",")}\nValid options are: #{GlExporter::OPTIONAL_MODELS.join(", ")}"
      exit 1
    end
    options[:models] = GlExporter::OPTIONAL_MODELS - v.split(",")
  end

  opts.on "--lock-projects=<true,false,transient>", "'Archive' projects to prevent changes." do |v|
    options[:lock_projects] = ["true", "transient"].include?(v) ? v : "false"
  end

  opts.on "--without-renumbering=<issues,merge_requests>", "do not renumber either issues or merge requests" do |v|
    options[:without_renumbering] = v
  end

  opts.on "-f FILE", "--manifest FILE", "export the list of repositories in FILE" do |v|
    options[:manifest] = v
  end

  opts.on(
    "--ssl-no-verify",
    "Do not validate the SSL certificate of GitLab"
  ) do
    options[:ssl_verify] = false
  end

  opts.on "--help", "-h", "show this message" do
    puts opts; exit 0
  end

  opts.on "--version", "-v", "Display current version" do
    puts "Gitlab Exporter " + GlExporter::VERSION
    exit 0
  end
end
optparse.parse!
if ARGV.any? || !options[:output_path]
  puts optparse
  exit 1
end

Dotenv.load
GlExporter.new(options).export
