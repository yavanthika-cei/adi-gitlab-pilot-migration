#!/usr/bin/env bash

RUBY_VERSION="ruby 3.2.1"

prompt_options()
{
  printf "GitLab Host [https://gitlab.example.com]: "
  read GITLAB_HOST
  printf "GitLab API Private Token: "
  read -s GITLAB_API_PRIVATE_TOKEN
  echo ""
  printf "Example GitLab Project SSH clone path [git@gitlab.example.com:username/projectname.git]: "
  read GITLAB_CLONE_URL
  echo ""
}

dependency_test()
{
  for dep in git ruby cmake; do
    printf "Checking for %s..." "$dep"
    (command -v $dep &>/dev/null && echo "ok") || { printf "\nError: I require the \`$dep\` command but it's not installed.\n"; exit 1; }
  done
}

ruby_version_test()
{
  printf "Checking ruby version..."
  if [[ ! $(ruby -v) =~ ^$RUBY_VERSION ]]; then
    printf "\nError: Ruby version \`$RUBY_VERSION\` is required, installed version is $(ruby -v)"
    printf "\nTo install multiple versions of ruby, follow the instructions at https://rvm.io"
    exit 1
  else
    echo "ok"
  fi
}

bundler_test()
{
  printf "Checking for bundler..."
  if [[ ! $(which bundler) ]]; then
    printf "\nError: The ruby gem \`bundler\` was not found. Install it using \`gem install bundler\`"
    exit 1
  else
    echo "ok"
  fi
}

api_connection_test()
{
  printf "Attempting to connect to GitLab API at %s/api/v4/user..." "$GITLAB_HOST"
  api_response_status=$(curl -o /dev/null --silent --head --write-out '%{http_code}\n' $GITLAB_HOST/api/v4/user?private_token=$GITLAB_API_PRIVATE_TOKEN)
  if [[ ! $api_response_status == 200 ]]; then
    printf "\nError: Unable to connect to the GitLab API. Verify your GitLab host and API token"
    exit 1
  else
    echo "ok"
  fi
}

git_clone_test()
{
  printf "Attempting to verify access to repository at %s..." $GITLAB_CLONE_URL
  git ls-remote $GITLAB_CLONE_URL &> /dev/null
  if [[ ! $? == 0 ]]; then
    echo "Error: The GitLab exporter only clones using SSH, and will only use the default configured SSH key (typically \`~/.ssh/id_rsa\`)"
    echo "Ensure that the default public key has been added to your GitLab account, and that you have clone access to this repository"
    echo "Verify that the command below works before continuing:"
    printf "\n\tgit ls-remote $GITLAB_CLONE_URL"
    printf "\n\n"
    exit 1
  else
    echo "ok"
  fi
}

success()
{
  echo "Hooray! This computer should do just fine running GitLab Exporter"
}

prompt_options
dependency_test
ruby_version_test
bundler_test
api_connection_test
git_clone_test
success
